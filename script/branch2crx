#!/usr/bin/env node
var request = require('request-promise')
var exec = require('child_process').execSync

var token = process.env.GITHUB_TOKEN

try {
  exec('npm run build && npm run pack')
} catch (e) {
  console.error('Error on packing')
  process.exit(-1)
}

var crxfile = 'build/chrome.crx'

if (!(crxfile && crxfile.match(/\.crx$/))) {
  console.error('It requires crx file')
  process.exit(-1)
}

var ref = exec('git show-ref refs/heads/`git rev-parse --abbrev-ref HEAD`').toString().split(' ')[0]
console.log(`upload with ${ref}`)
request({
  method: 'POST',
  uri: 'https://api.github.com/repos/gyazo/gyazo-chrome-extension/deployments',
  headers: {
    'Authorization': 'token ' + token,
    'User-Agent': 'gyazo/gyazo-chrome-extension'
  },
  body: {
    ref: ref,
    required_contexts: [],
    auto_merge: false,
    environment: 'alpha_build',
    description: ''
  },
  json: true,
  resolveWithFullResponse: true
}).then(function(res) {
  var err = false
  var path = `gyazo-browser-extension/${Date.now()}/`
  var crxUploadUrl = `http://storage.googleapis.com/${path}chrome.crx`
  if (res.statusCode < 400) {
    try {
      exec(`gsutil cp -z crx -a public-read build/chrome.crx gs://${path}`)
    } catch (e) {
      err = true
    }
  } else {
    err = true
  }
  if (err) {
    request({
      method: 'POST',
      headers: {'Authorization': 'token ' + token, 'User-Agent': 'gyazo/gyazo-chrome-extension'},
      uri: 'https://api.github.com/repos/gyazo/gyazo-chrome-extension/deployments/' + res.body.id + '/statuses',
      body: {state: 'error'},
      json: true
    }).then(function() {
      process.exit(1)
    })
    return
  }
  request({
    method: 'POST',
    headers: {
      'Authorization': 'token ' + token,
      'User-Agent': 'gyazo/gyazo-chrome-extension'
    },
    uri: 'https://api.github.com/repos/gyazo/gyazo-chrome-extension/deployments/' + res.body.id + '/statuses',
    body: {
      state: 'success',
      target_url: crxUploadUrl
    },
    json: true
  })
})
